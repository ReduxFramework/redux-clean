/*global jQuery, document */(function(e){"use strict";e.redux=e.redux||{};e(document).ready(function(){e.redux.edd()});e.redux.edd=function(){jQuery(".redux-edd-input").change(function(){jQuery(this).parent().find(".redux-edd-status").val("")});jQuery(document).on("click",".redux-EDDAction",function(e){e.preventDefault();var t=jQuery(this).parents(".redux-container-edd_license:first"),n=jQuery(this).attr("data-id"),r={};t.find(".redux-edd").each(function(){r[jQuery(this).attr("id").replace(n+"-","")]=jQuery(this).val()});r.edd_action=jQuery(this).attr("data-edd_action");r.opt_name=redux_opts.opt_name;jQuery.post(ajaxurl,{action:"redux_edd_"+redux_opts.opt_name+"_license",data:r},function(e){e=jQuery.parseJSON(e);console.log(e);jQuery("#"+n+"-status").val(e.status);jQuery("#"+n+"-status_notice").html(e.status);e.response==="valid"?jQuery("#"+n+"-notice").attr("class","redux-info-field redux-success"):e.response==="deactivated"&&jQuery("#"+n+"-notice").attr("class","redux-info-field redux-warning")})})}})(jQuery);